{"mappings":"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","sources":["src/js/menu.js","src/js/back-to-top.js","src/js/sim-slider.js","src/js/modal.js","src/js/active-link.js","src/js/favorites-modal.js"],"sourcesContent":["(() => {\n  const refs = {\n    openMenuBtn: document.querySelector('[data-menu-open]'),\n    closeMenuBtn: document.querySelector('[data-menu-close]'),\n    menu: document.querySelector('.mob-menu'),\n    body: document.querySelector('body'),\n    menuList: document.querySelector('.mob-menu-nav__list'),\n  };\n\n  refs.openMenuBtn.addEventListener('click', toggleMenu);\n  refs.closeMenuBtn.addEventListener('click', toggleMenu);\n  refs.menuList.addEventListener('click', removeMenu);\n\n  function toggleMenu() {\n    refs.menu.classList.toggle('is-hidden');\n    refs.body.classList.toggle('no-scroll');\n  }\n\n  function removeMenu() {\n    refs.menu.classList.add('is-hidden');\n  }\n})();\n","//Get the button\n  var mybutton = document.getElementById(\"go-up-btn\");\n\n  // When the user scrolls down 20px from the top of the document, show the button\n  window.onscroll = function() {scrollFunction()};\n\n  function scrollFunction() {\n  if (document.body.scrollTop > 150 || document.documentElement.scrollTop > 150) {\n  mybutton.style.opacity = 1;\n} else {\n  mybutton.style.opacity = 0;\n}\n}\n\n  // When the user clicks on the button, scroll to the top of the document\n  function topFunction() {\n  document.body.scrollTop = 0;\n  document.documentElement.scrollTop = 0;\n}","function Sim(sldrId) {\n  let id = document.getElementById(sldrId);\n  if (id) {\n    this.sldrRoot = id;\n  } else {\n    this.sldrRoot = document.querySelector('.sim-slider');\n  }\n\n  // Carousel objects\n  this.sldrList = this.sldrRoot.querySelector('.sim-slider-list');\n  this.sldrElements = this.sldrList.querySelectorAll('.sim-slider-element');\n  this.sldrElemFirst = this.sldrList.querySelector('.sim-slider-element');\n  this.leftArrow = this.sldrRoot.querySelector('div.sim-slider-arrow-left');\n  this.rightArrow = this.sldrRoot.querySelector('div.sim-slider-arrow-right');\n  this.indicatorDots = this.sldrRoot.querySelector('div.sim-slider-dots');\n\n  // Initialization\n  this.options = Sim.defaults;\n  Sim.initialize(this);\n}\n\nSim.defaults = {\n  // Default options for the carousel\n  loop: true, // Бесконечное зацикливание слайдера\n  auto: true, // Автоматическое пролистывание\n  interval: 5000, // Интервал между пролистыванием элементов (мс)\n  arrows: true, // Пролистывание стрелками\n};\n\nSim.prototype.elemPrev = function (num) {\n  num = num || 1;\n\n  let prevElement = this.currentElement;\n  this.currentElement -= num;\n  if (this.currentElement < 0) this.currentElement = this.elemCount - 1;\n\n  if (!this.options.loop) {\n    if (this.currentElement == 0) {\n      this.leftArrow.style.display = 'none';\n    }\n    this.rightArrow.style.display = 'block';\n  }\n\n  this.sldrElements[this.currentElement].style.opacity = '1';\n  this.sldrElements[prevElement].style.opacity = '0';\n\n  if (this.options.dots) {\n    this.dotOn(prevElement);\n    this.dotOff(this.currentElement);\n  }\n};\n\nSim.prototype.elemNext = function (num) {\n  num = num || 1;\n\n  let prevElement = this.currentElement;\n  this.currentElement += num;\n  if (this.currentElement >= this.elemCount) this.currentElement = 0;\n\n  if (!this.options.loop) {\n    if (this.currentElement == this.elemCount - 1) {\n      this.rightArrow.style.display = 'none';\n    }\n    this.leftArrow.style.display = 'block';\n  }\n\n  this.sldrElements[this.currentElement].style.opacity = '1';\n  this.sldrElements[prevElement].style.opacity = '0';\n\n  if (this.options.dots) {\n    this.dotOn(prevElement);\n    this.dotOff(this.currentElement);\n  }\n};\n\nSim.prototype.dotOn = function (num) {\n  this.indicatorDotsAll[num].style.cssText =\n    'background-color:#BBB; cursor:pointer;';\n};\n\nSim.prototype.dotOff = function (num) {\n  this.indicatorDotsAll[num].style.cssText =\n    'background-color:#556; cursor:default;';\n};\n\nSim.initialize = function (that) {\n  // Constants\n  that.elemCount = that.sldrElements.length; // Количество элементов\n\n  // Variables\n  that.currentElement = 0;\n  let bgTime = getTime();\n\n  // Functions\n  function getTime() {\n    return new Date().getTime();\n  }\n  function setAutoScroll() {\n    that.autoScroll = setInterval(function () {\n      let fnTime = getTime();\n      if (fnTime - bgTime + 10 > that.options.interval) {\n        bgTime = fnTime;\n        that.elemNext();\n      }\n    }, that.options.interval);\n  }\n\n  // Start initialization\n  if (that.elemCount <= 1) {\n    // Отключить навигацию\n    that.options.auto = false;\n    that.options.arrows = false;\n    that.options.dots = false;\n    that.leftArrow.style.display = 'none';\n    that.rightArrow.style.display = 'none';\n  }\n  if (that.elemCount >= 1) {\n    // показать первый элемент\n    that.sldrElemFirst.style.opacity = '1';\n  }\n\n  if (!that.options.loop) {\n    that.leftArrow.style.display = 'none'; // отключить левую стрелку\n    that.options.auto = false; // отключить автопркрутку\n  } else if (that.options.auto) {\n    // инициализация автопрокруки\n    setAutoScroll();\n    // Остановка прокрутки при наведении мыши на элемент\n    that.sldrList.addEventListener(\n      'mouseenter',\n      function () {\n        clearInterval(that.autoScroll);\n      },\n      false\n    );\n    that.sldrList.addEventListener('mouseleave', setAutoScroll, false);\n  }\n\n  if (that.options.arrows) {\n    // инициализация стрелок\n    that.leftArrow.addEventListener(\n      'click',\n      function () {\n        let fnTime = getTime();\n        if (fnTime - bgTime > 1000) {\n          bgTime = fnTime;\n          that.elemPrev();\n        }\n      },\n      false\n    );\n    that.rightArrow.addEventListener(\n      'click',\n      function () {\n        let fnTime = getTime();\n        if (fnTime - bgTime > 1000) {\n          bgTime = fnTime;\n          that.elemNext();\n        }\n      },\n      false\n    );\n  } else {\n    that.leftArrow.style.display = 'none';\n    that.rightArrow.style.display = 'none';\n  }\n};\n\nnew Sim();\n","(() => {\n    const refs = {\n        openHeaderModalBtn: document.querySelector(\"[data-header-modal-open]\"),\n        openHeroModalBtn: document.querySelector(\"[data-hero-modal-open]\"),\n        openOfferingsModalBtn: document.querySelector(\"[data-offerings-modal-open]\"),\n        closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n        modal: document.querySelector(\"[data-modal]\"),\n    };\n\n    refs.openHeaderModalBtn.addEventListener(\"click\", toggleModal);\n    refs.openHeroModalBtn.addEventListener(\"click\", toggleModal);\n    refs.openOfferingsModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n    function toggleModal() {\n        document.body.classList.toggle(\"modal-open\")\n        refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();","document.addEventListener('DOMContentLoaded', function() {\n\n  const navInit = () => {\n    const nav = document.querySelector('.nav') // ищем блок навигации\n    const links = document.querySelectorAll('.nav__link') // ищем все навигационные ссылки\n    const sections = document.querySelectorAll('.anchor') // ищем все секции\n    sections.forEach(section => { // для каждой секции\n      if (window.scrollY >= section.offsetTop -1) { // проверяем, если страница прокручена больше, чем расстояние\n        // секции от начала страницы\n        links.forEach(link => { // для каждой ссылки\n          link.classList.remove('nav__link--current') // удаляем активный класс\n          if (link.dataset.section === section.dataset.section) { // проверяем, если data-атрибуты ссылки и секции совпадают\n            link.classList.add('nav__link--current') // добавляем ссылке активный класс\n          }\n        })\n      }\n    })\n  }\n  navInit() // запускаем функцию при загрузке страницы\n  window.addEventListener('scroll', () => {\n    navInit() // запускаем функцию при скролле страницы\n  })\n  window.addEventListener('resize', () => {\n    navInit() // запускаем функцию при ресайзе страницы\n  })\n})\n","(() => {\n  const refs = {\n    openFavoritesGamburgerBtn: document.querySelector(\n      '[data-favorites-gamburger-open]'\n    ),\n    openFavoritesPastaBtn: document.querySelector(\n      '[data-favorites-pasta-open]'\n    ),\n    openFavoritesPizzaBtn: document.querySelector(\n      '[data-favorites-pizza-open]'\n    ),\n    openFavoritesChickenBtn: document.querySelector(\n      '[data-favorites-chicken-open]'\n    ),\n    openFavoritesSalatBtn: document.querySelector(\n      '[data-favorites-salat-open]'\n    ),\n    openFavoritesBorshchBtn: document.querySelector(\n      '[data-favorites-borshch-open]'\n    ),\n\n    closeFavoritesYesBtn: document.querySelector('[data-modal-yes-btn]'),\n    closeFavoritesNoBtn: document.querySelector('[data-modal-no-btn]'),\n    modal: document.querySelector('[data-favorites-modal]'),\n  };\n\n  refs.openFavoritesGamburgerBtn.addEventListener('click', toggleModal);\n  refs.openFavoritesPastaBtn.addEventListener('click', toggleModal);\n  refs.openFavoritesPizzaBtn.addEventListener('click', toggleModal);\n  refs.openFavoritesChickenBtn.addEventListener('click', toggleModal);\n  refs.openFavoritesSalatBtn.addEventListener('click', toggleModal);\n  refs.openFavoritesBorshchBtn.addEventListener('click', toggleModal);\n\n  refs.closeFavoritesYesBtn.addEventListener('click', toggleModal);\n  refs.closeFavoritesNoBtn.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n  }\n})();"],"names":["refs","openMenuBtn","document","querySelector","closeMenuBtn","menu","body","menuList","toggleMenu","classList","toggle","addEventListener","add","$8b39b8249f96b57e$var$mybutton","getElementById","$314376f7e540fbbc$var$Sim","sldrId","id","this","sldrRoot","sldrList","sldrElements","querySelectorAll","sldrElemFirst","leftArrow","rightArrow","indicatorDots","options","defaults","initialize","window","onscroll","scrollTop","documentElement","style","opacity","openHeaderModalBtn","openHeroModalBtn","openOfferingsModalBtn","closeModalBtn","modal","toggleModal","navInit","links","forEach","section","scrollY","offsetTop","link","remove","dataset","loop","auto","interval","arrows","prototype","elemPrev","num","prevElement","currentElement","elemCount","display","dots","dotOn","dotOff","elemNext","indicatorDotsAll","cssText","that","length","bgTime","getTime","Date","setAutoScroll","autoScroll","setInterval","fnTime","clearInterval","openFavoritesGamburgerBtn","openFavoritesPastaBtn","openFavoritesPizzaBtn","openFavoritesChickenBtn","openFavoritesSalatBtn","openFavoritesBorshchBtn","closeFavoritesYesBtn","closeFavoritesNoBtn"],"version":3,"file":"index.11f78a2a.js.map"}